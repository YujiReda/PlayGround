                     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
                             BACKLOG DRAFT

                             Matyáš Pokorný
                      m.pokorny@student.tudelft.nl
                     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━


Table of Contents
─────────────────

1.  (#MUST)   Lecture room creation
2.  (#MUST)   Lecture room joining
3.  (#MUST)   Question asking
4.  (#MUST)   Question answering
5.  (#MUST)   Question rating
6.  (#MUST)   Question ordering
7.  (#MUST)   Question deleting
8.  (#MUST)   Question marking
9.  (#MUST)   Lecture review
10. (#SHOULD) Moderator view
11. (#SHOULD) Moderator editing
12. (#SHOULD) Moderator deleting
13. (#SHOULD) Question deduplication
14. (#SHOULD) Banning
15. (#SHOULD) Pace feedback
16. (#SHOULD) Scheduled lectures
17. (#SHOULD) Rate limiting
18. (#SHOULD) Accessibility
19. (#COULD)  Real-time communication
20. (#COULD)  Polls
21. (#COULD)  Prepared polls
22. (#COULD)  Tagging
23. (#COULD)  Manual
24. (#COULD)  Scalability





1 (#MUST) Lecture room creation
═══════════════════════════════

  As a lecturer, I want the ability to create a lecture room, so that I
  can share it with my students.

  Definition of done: The lecturer can create a new room. This room is
  independent of all others, and there may be multiple rooms open at the
  same time.


2 (#MUST) Lecture room joining
══════════════════════════════

  As a student, I want the ability to join a room created by a lecturer,
  so that I can interact with them using the platform.

  Definition of done: The student can join a room created by the
  lecturer.


3 (#MUST) Question asking
═════════════════════════

  As a student who joined a lecture room, I want to be able to ask
  questions to the lecturer through the platform, so that they can
  answer it (in a real lecture hall, not through the platform).

  Definition of done: The student can submit questions to the
  room. The student can see their questions and questions asked by other
  students in the same room.


4 (#MUST) Question answering
════════════════════════════

  As a lecturer, I want to see the questions submitted by the students
  in my room, so that I can answer their questions (not through the
  platform).

  Definition of done: Questions submitted by the students are
  displayed to the lecturer.


5 (#MUST) Question rating
═════════════════════════

  As a student, I want the ability to up-vote a question that has
  already been asked by another student, to indicate that I'd like to
  know the answer as well.

  Definition of done: The students can see the rating of every
  question, and they can add their own up-vote to them. They can also
  remove their own up-vote if they change their mind.


6 (#MUST) Question ordering
═══════════════════════════

  As a lecturer, I want the questions displayed to be ordered based on
  their rating, to prioritize the most common questions. The ordering
  should also take into account when the questions were asked, so that
  popular questions from 1 hour ago are not cluttering up the list.

  Definition of done: The lecturer sees the most popular, fresh
  questions at the top of their list.


7 (#MUST) Question deleting
═══════════════════════════

  As a student, I want the ability to delete a question I asked, in case
  I made a typo or I notice that the same question has been already
  asked.

  Definition of done: The students can delete their own questions.


8 (#MUST) Question marking
══════════════════════════

  As a lecturer, I want the ability to mark question as either answered
  or deleted, to remove it from the list of questions.

  Definition of done: The lecturer can either mark a question as
  either answered or remove it without answering it. In both cases, the
  question is removed from their list, and the student who asked the
  question, and those who up-voted it, are all notified that the
  question has been answered/removed.


9 (#MUST) Lecture review
════════════════════════

  As a lecturer, I want the ability to view all the posed questions
  after the lecture has ended, so that I can identify the most common
  ones.

  Definition of done: The lecturer can access any finished lecture and
  view all the posed. Questions are all displayed along with their
  rating.


10 (#SHOULD) Moderator view
═══════════════════════════

  As a lecturer, I want the ability to let someone join in as a
  moderator, so that they can help manage the incoming questions.

  Definition of done: The lecturer may allow a trusted set of
  moderators to join the lecture. The authorized moderators can join an
  ongoing lecture.


11 (#SHOULD) Moderator editing
══════════════════════════════

  As a moderator, I want to be able to edit questions to remove typos or
  make them clearer.

  Definition of done: The moderator can edit questions posed by the
  students. The updated version of the question is propagated to the
  lecturer. An indication that the question has been edited is shown to
  the student who asked the question.


12 (#SHOULD) Moderator deleting
═══════════════════════════════

  As a moderator, I want the ability to remove questions so that I can
  keep the questions on point and civil.

  Definition of done: The moderator can remove the questions posed,
  for each selecting a reason from a short list (off topic, already
  answered, spam). Removed questions are also removed from the
  lecturer's view. The author of the question is notified that their
  question has been removed along with the reason given.


13 (#SHOULD) Question deduplication
═══════════════════════════════════

  As a moderator, I want the ability to mark two questions as duplicates
  of each other to make the lecturers work easier.

  Definition of done: The moderator can merge two or more questions
  into one. This combined question will have a rating based on all the
  original questions. The duplicate questions are removed from the
  lectures view, and the new question is made visible. The authors of
  the original questions are notified and presented with the merged
  question. None of the authors may remove the question once it's been
  deduplicated.


14 (#SHOULD) Banning
════════════════════

  As a moderator, I want the ability to remove misbehaving students and
  bots from the lecture room.

  Definition of done: The moderator can ban students. The banned
  students are unable to join back into the room. The students cannot
  easily circumvent this ban without deep understanding of the client.


15 (#SHOULD) Pace feedback
══════════════════════════

  As a student, I want a way to give feedback to the lecturer about the
  pace of the ongoing lecture.

  Definition of done: The students are every few minutes
  non-intrusively asked to provide feedback about the pace of the
  lecture (too slow, just right, too fast). The lecturer can see the sum
  of all the answers, once tallied.


16 (#SHOULD) Scheduled lectures
═══════════════════════════════

  As a lecturer, I want the option to schedule rooms into the future, so
  that I have a list of all the lecture room links ready.

  Definition of done: The lecturer can schedule rooms into the future
  and thus obtain their join links. The students may use this link to
  view the room (see when the lecture is scheduled to take place), but
  they cannot submit any questions until the lecturer opens for
  questions.


17 (#SHOULD) Rate limiting
══════════════════════════

  As an lecturer, I want the questions to keep coming at an acceptable
  rate. As an administrator, I want to limit the amount of spam, to
  limit the server and network load.

  Definition of done: The server administrator can set a minimal delay
  between questions posed by a single student. The student cannot submit
  their answer until this minimal time delay is reached. The lecturer
  can also set a higher limit, than the system limit, for their own
  lectures.


18 (#SHOULD) Accessibility
══════════════════════════

  As a user of the platform with sight issues (color blindness, blurry
  vision), I want to still be able to use the platform without major
  issues. As a lecturer, I might be further away from the screen when
  reading text off it, so it would be nice if I could scale up the font
  to better see it at a distance.

  Definition of done: All users can adjust the font size. Any user,
  with anomalous color vision (mainly protanopia, deuteranopia,
  protanomaly, deuteranomaly), can read all text and interact with all
  aspects of the application.


19 (#COULD) Real-time communication
═══════════════════════════════════

  As a lecturer, I want to see the questions posed as soon as
  possible. Real-time client-server communication will also remove some
  of the load associated with polling.

  Definition of done: All clients present in a lecture form a
  persistent connection to the server. Unless questions are going in or
  are being updated (by the moderator, for example), the only messages
  sent between the client and server are hearth-beat messages. All
  server polling is eliminated.


20 (#COULD) Polls
═════════════════

  As a lecturer, I want the ability to pose a direct polling question to
  the students, to gain insight on their understanding.

  Definition of done: The lecturer can create a multiple-choice (at
  least 6) question during the lecture. The students may then pick one
  of the options until the lecturer closes the question. Throughout the
  polling process, the lecturer can see the current number of answers
  submitted. Once the lecturer closes the polling question, they can see
  the final distribution of answers across the options, and the number
  of students who did not answer.


21 (#COULD) Prepared polls
══════════════════════════

  As a lecturer, I want the option to prepare all polling questions
  before the lecture starts, so that I don't have to type them in during
  the lecture.

  Definition of done: The lecturer can prepare polling questions for
  scheduled lectures. Once they are in lecture, they can simply open the
  polls from a list of the prepared polling questions.


22 (#COULD) Tagging
═══════════════════

  To be discussed with a CTA.

  Definition of done: The student can easily add tags to their
  question. The moderator can edit these tags. The lecturer can see
  these tags and filter for them.


23 (#COULD) Manual
══════════════════

  As a first-time user, I want some in-built manual and guidance, so
  that I can easily learn how to use and fully utilize the application.

  Definition of done: Any user can at any point open a help dialog
  explaining the current screen.


24 (#COULD) Scalability
═══════════════════════

  As an administrator, I want the option to easily dynamically scale the
  server to match the current load.

  Definition of done: The application can easily be deployed and
  dynamically scaled on major cloud platforms (AWS, Azure).
