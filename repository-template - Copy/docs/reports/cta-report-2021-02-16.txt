                     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
                           CTA MEETING REPORT

                             Matyáš Pokorný
                      m.pokorny@student.tudelft.nl
                     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━


                               2021-02-16


Table of Contents
─────────────────

1. Project high-level overview
2. Features
.. 1. (#MUST) At least one lecture room
.. 2. (#MUST) Students may ask questions
.. 3. (#MUST) Students may rate the questions
.. 4. (#MUST) Students may delete their questions
.. 5. (#MUST) The lecturer may remove questions
.. 6. (#MUST) Questions are accessible after the lecture
.. 7. (#MUST) The lecturer can view questions
.. 8. Moderators
..... 1. (#SHOULD) Moderators may edit questions
..... 2. (#SHOULD) Moderators may merge questions
..... 3. (#SHOULD) Moderators may ban students
.. 9. (#SHOULD) Multiple lectures
.. 10. (#SHOULD) Students may provide feedback about the pace
.. 11. (#SHOULD) Lecturers may schedule their lectures
.. 12. (#SHOULD) Stale questions are removed automatically
.. 13. (#COULD) Real-time questions
.. 14. (#COULD) Polls
.. 15. (#COULD) Question rate limiting
.. 16. (#COULD) Tagging
.. 17. (#COULD) Accessibility
.. 18. (#COULD) Manual
.. 19. (#COULD) Scalability
3. For next CTA meeting
.. 1. Backlog
.. 2. GUI prototype





1 Project high-level overview
═════════════════════════════

  A platform that allows students to anonymously submit questions to a
  teacher during a lecture. The questions submitted can be upvoted by
  other students attending the same lecture. Students may also indicate
  whether the lecture pace is too quick or too slow. The lecturer can
  see all the submitted questions ordered by their popularity, taking
  into account the age of the questions.


2 Features
══════════

  Features marked with the #MUST priority are required to pass the 
  course.


2.1 (#MUST) At least one lecture room
──────────────────────────────────

  The system must support at least one lecture room.

  NOTE: How are the lecturers authenticated? Can anyone with access to
  the service start a lecture?


2.2 (#MUST) Students may ask questions
───────────────────────────────────

  Students can submit their questions to the lecturer.

  NOTE: There is no authentication scheme. Most probably implemented as
  an URL with a short, random (non-sequential) ID.


2.3 (#MUST) Students may rate the questions
────────────────────────────────────────

  Students must have a way to rate other asked questions.


2.4 (#MUST) Students may delete their questions
────────────────────────────────────────────

  After submitting a questions, the student may decide to delete it
  (because of a typo or because it was already asked by someone else,
  etc.).


2.5 (#MUST) The lecturer may remove questions
──────────────────────────────────────────

  Once the lecturer has answered a question, they may mark it as
  answered (and thus remove it from their view) or if it is a question
  they are not going to answer, they may simply remove it.


2.6 (#MUST) Questions are accessible after the lecture
───────────────────────────────────────────────────

  The lecturer may review the questions long-term after the lecture


2.7 (#MUST) The lecturer can view questions
────────────────────────────────────────

  The lecturer can view the asked questions ordered by their rating.


2.8 Moderators
──────────────

  NOTE: There is no authorization for moderators, they are provided with
  a special (secret) link to the lecture.


2.8.1 (#SHOULD) Moderators may edit questions
╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌

  Moderators may edit (rephrase) questions posed.

  NOTE: It is currently unclear, whether the students can delete the
  question after a moderator has edited it.


2.8.2 (#SHOULD) Moderators may merge questions
╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌

  A moderator may mark multiple questions as duplicates. Once they do
  so, the more popular phrasing becomes the main question and the
  duplicates are removed. The student may no longer remove the question
  once it was merged with others.


2.8.3 (#SHOULD) Moderators may ban students
╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌

  The moderator may choose to somehow ban the students who are causing
  trouble.

  NOTE: Originally, this was meant to be implemented as an IP ban, but a
  different system will probably be used.


2.9 (#SHOULD) Multiple lectures
──────────────────────────

  The platform can handle multiple concurrent lectures.


2.10 (#SHOULD) Students may provide feedback about the pace
──────────────────────────────────────────────────────

  The students may use the platform to provide feedback about the pacing
  of the lecture (too quick/too slow).


2.11 (#SHOULD) Lecturers may schedule their lectures
───────────────────────────────────────────────

  The lecturers may create their lecture rooms ahead of time.


2.12 (#SHOULD) Stale questions are removed automatically
───────────────────────────────────────────────────

  As mentioned above, the lecturer may see the questions asked by the
  students ordered based on their popularity. However, the lecturer may
  ignore some of these questions. If they don't remove such questions
  manually, the system should automatically remove stale questions.


2.13 (#COULD) Real-time questions
─────────────────────────────

  The lecturer sees all questions in real time, as they are coming in.


2.14 (#COULD) Polls
───────────────

  The lecturer may start a multiple-choice poll, and then view how many
  students voted for which option.


2.15 (#COULD) Question rate limiting
────────────────────────────────

  There should be a rate limit on the students to avoid spam.


2.16 (#COULD) Tagging
─────────────────

  Students (and possibly, moderators) have the option to mark their
  questions using tags.

	NOTE: But why would the lecturer/moderator want that?


2.17 (#COULD) Accessibility
───────────────────────

  The application may be easily used by people who are color-blind or
  have poor eyesight.


2.18 (#COULD) Manual
────────────────

  The application provides a simple "How to use" guide.


2.19 (#COULD) Scalability
─────────────────────

  The server can be easily and dynamically scaled up in cloud.


3 For next CTA meeting
══════════════════════

3.1 Backlog
───────────

  We must have a backlog prepared.


3.2 GUI prototype
─────────────────

  We should have some GUI sketch to show off.
